#!/bin/sh

# rename this file to .env

# set to 0 to create github pullrequests
# if set to 1 it is just printing what it would do
export ARG_DRY=1

# the github username of the account creating the pullrequests
# default is https://github.com/teeworlds-mirror
# make sure to be logged in to that account
# but not using the user wide login config but the one local to this directory
#
#  GH_CONFIG_DIR=./gh gh auth login
export GH_BOT_USERNAME=teeworlds-mirror

# the repository you are mirroring without github.com in front
# so the default teeworlds/teeworlds points to https://github.com/teeworlds/teeworlds
export UPSTREAM_REMOTE=teeworlds/teeworlds

# the repository you are mirroring to without github.com in front
# so the default teeworlds-community/teeworlds points to https://github.com/teeworlds-community/teeworlds
export DOWNSTREAM_REMOTE=teeworlds-community/teeworlds

# If set to 0 the upstream pr will be directly linked to the mirror repo
# meaning we just open a github pullrequest trying to merge
# the upstreams contributors branch into the mirror repo
# that means the branch is only writable by the upstream pr author
# and it will be automatically updated if the upstream pr author pushes
#
# If set to 1 the mirror bot will create a copy of the branch
# located in COPY_BRANCHES_REMOTE and then pr that against the mirror repo
# now this branch is not in sync with the upstream pullrequest
# and can be written to by the mirror bot
export COPY_BRANCHES=0

# if COPY_BRANCHES is set to 1
# this remote will be used for creating the branches
export COPY_BRANCHES_REMOTE=teeworlds-mirror/teeworlds_teeworlds-mirror-prs

# the main branch of your mirror
# against this branch the pullrequest from upstream will be made
export DOWNSTREAM_BRANCH=community

# the main branch of the upstream repository
# only this branch will be mirrored
export UPSTREAM_BRANCH=master
